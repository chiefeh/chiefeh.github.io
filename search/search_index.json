{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Chiefeh's Blog","text":"<p>This is the chiefeh.github.io version</p> <p>I've decided to start recording my technology things so I can reference them in future when I forget things and for the benefit of others who are in a similar position. I've chosen MkDocs as the way to convert Markdown files into nice to look at websites with search.</p>"},{"location":"#github-pages-using-mkdocs","title":"GitHub Pages using MkDocs","text":"<p>This is the first step, to create this site and use it as an anchor around which to build out lots of learnings.</p>"},{"location":"#building-a-container","title":"Building a Container","text":"<p>The MKDocs site contents simply need to be put into a container and served from a web server. This is done using a new workflow in GitHub actions using podman and a Container file (in lieu of Docker) and posting it using quay.io for the container registry. You can find the container here: https://quay.io/repository/chiefeh/my-first-container and run it using</p> <pre><code>podman run --rm -p 8080:80 quay.io/chiefeh/my-first-container\n</code></pre>"},{"location":"#infrastructure-as-code","title":"Infrastructure as code","text":"<p>Infrastructure as code (IaC) will depend on Terraform, Ansible, containers (see previous) and Continuous Integration/Continuous Delivery (CI/CD) to build the Infrastructure that will run applications. I am not a developer so a lot of this will be new to me, along with figuring out some new apps such as Atom.io, Git/GitHub and so on.</p>"},{"location":"#2023-update","title":"2023 Update","text":"<p>New Job. Time to reset.</p>"},{"location":"#2024-update","title":"2024 Update","text":"<p>Another new job. Time to reset again, and restart this!</p>"},{"location":"about/","title":"Who Am I","text":""},{"location":"about/#background","title":"Background","text":"<p>I've worked as some person who tinkers with tech, mostly fixing a problem here and there or building new systems in the classic sense of plugging firewalls into internet connections, building windows servers, desktops and laptops...</p> <p>Mostly I've been learning from other people's mistakes.</p>"},{"location":"about/#why-chiefeh","title":"Why Chiefeh?","text":"<p>Well, I took my gaming nick-name from the character Chief Miles O'Brien from Star Trek (TNG and DS9). Long before solidified my career working in technology|engineering I found myself fixing things that others had broken, and thus have come full circle.</p>"},{"location":"about/#what-is-this-site-for","title":"What is this site for","text":"<p>Its about time I started doing what I normally only get to talk about. I've not written HTML beyond the quick hack to test a webserver, so to focus on writing and saving content with out focusing on the base infrastructure, I will host the site on GitHub Pages, using MkDocs and Materials theme. You can see the source code for this site by clicking on the link in the top right of the page or here.</p> <p>The mkdocs.yml file is listed below</p> <pre><code>site_name: Chiefeh Blog\nsite_description: 'Somewhere to post my stuff'\nsite_author: 'Gregory Bennett'\ndocs_dir: docs/\nrepo_name: 'chiefeh/chiefeh.github.io'\nrepo_url: 'https://github.com/chiefeh/chiefeh.github.io'\nnav:\n    - Home: index.md\n    - About: about.md\ntheme:\n  name: material\n  palette:\n    scheme: slate\n    primary: light blue\n    accent: deep purple\n</code></pre>"},{"location":"about/#maintaining-a-consistent-approach","title":"Maintaining a consistent approach","text":"<p>I've found that future me has always thanked past me for doing things the same way in regards to approach or patterns of behavior. Being consistent allows work to be completed faster (or probably less focus on documenting things).</p>"},{"location":"git/","title":"Git and all related things.","text":"<p>The products &amp; services in the title are key to so many organisations. I will focus on learning GitHub's services and features as much as possible, but also compare to alternates such as GitLab and I have an account there too. I will try to compare/contrast where necessary for my own benefit and share here.</p> <p>I've decided to pay for a \"Pro\" GitHub Account - just because, I've also decided to sponsor Jeff Geerling as I read a lot of his material and watch his awesome videos on YouTube. Top bloke.</p> <p>Got a shout out!</p> <p></p>"},{"location":"infra-as-code/","title":"Infrastructure as code (IaC)","text":"<p>So IaC is going to be a huge part of my career for this decade. I do like visiting data centres but I do not want to spend weeks racking 'n stacking things anymore without good reason. In a work context its now much more acceptable to use the 'cloud' to do these things.</p> <p>As with most things, there are many ways to achieve an outcome. Many of these ways will be subject to the environment that one is working in, what is permitted by the organisation, but most of the time its what the individuals or teams are already comfortable with.</p> <p>The two main technologies/products I will be Ansible and Terraform.</p>"},{"location":"infra-as-code/#my-first-infrastructure-as-code","title":"My First Infrastructure as code","text":"<p>Goal: To create a website that is hosted on a container service.</p> <ol> <li>Create the \"Build\" phase which mostly creates the long lived stuff</li> <li>Create the \"Deploy\" phase which puts the revenue generating thing up there</li> <li>Create the \"Destroy\" phase which takes everything down again</li> </ol> <p>These three stages are how I see this working, there may be more to it but I'm starting with that. This project will live on it's own page here</p>"},{"location":"infra-as-code/#my-second-infrastructure-as-code","title":"My Second Infrastructure as code","text":"<p>Goal: To build a basic VPC with the necessary networking bits to host a simple hello world website that can be built and taken down using automation.</p> <ol> <li>Create the \"Build\" phase which mostly creates the long lived stuff</li> <li>Create the \"Deploy\" phase which puts the revenue generating thing up there</li> <li>Create the \"Destroy\" phase which takes everything down again</li> </ol> <p>These three stages are how I see this working, there may be more to it but I'm starting with that. This project will live on it's own page here</p>"},{"location":"linux-setup/","title":"Fedora Setup","text":"<p>I like Fedora, and Enterprise Linux in general by preference. </p> <p>Some reference notes for setting up a fresh machine.</p> <ul> <li>[x] Powerline Shell</li> <li>[x] SSH Key Setup</li> <li>[x] Git Setup</li> <li>[ ] Code Editor</li> <li>[ ] Kickstart / Automatic Build</li> </ul>"},{"location":"linux-setup/#powerline-shell","title":"Powerline Shell","text":"<p>If you are bored of the default shell, setup powerline!</p> <pre><code>sudo dnf install powerline powerline-fonts\n</code></pre> <p>Then add the following near the bottom of ~/.bashrc file:</p> <pre><code>if [ -f `which powerline-daemon` ]; then\n  powerline-daemon -q\n  POWERLINE_BASH_CONTINUATION=1\n  POWERLINE_BASH_SELECT=1\n  . /usr/share/powerline/bash/powerline.sh\nfi\n</code></pre> <p>This will make your shell look something like this: </p>"},{"location":"linux-setup/#ssh-key-setup","title":"SSH Key Setup","text":"<p>SSH is how everything communicates... ed25519 is supported by most things these days.</p> <pre><code>ssh-keygen -t ed25519 -C \"your@email.test\"\n</code></pre> <p>This will then generate your key in ~/.ssh/id_ed25519.pub which can be copied to GitHub and other places.</p>"},{"location":"linux-setup/#git-setup","title":"Git Setup","text":"<p>Before using Git, you will need to set a couple of global settings:</p> <pre><code>git config --global user.name \"Your Name\"\ngit config --global user.email \"your@email.test\"\n</code></pre>"},{"location":"linux-setup/#code-editor","title":"Code Editor","text":"<p>Everyone seems to use VS Code these days, I did like Atom.io but Microsoft after aquiring GitHub discontinued it in favour of VS Code.</p> <p>TODO: Setup VS Code in Fedora</p>"},{"location":"linux-setup/#kickstart-and-automatic-build","title":"KickStart and Automatic Build","text":"<p>TODO: Some KickStart and ISO creation tools TODO: Some Ansible to automate the rest?</p>"},{"location":"markdown/","title":"Markdown","text":"<p>Reference items for writing in Markdown</p>"},{"location":"iac/my-first-iac/","title":"My First Infrastructure as code","text":""},{"location":"iac/my-first-iac/#phase-0-bootstrap","title":"Phase 0 - Bootstrap","text":""},{"location":"iac/my-first-iac/#create-a-code-repository","title":"Create a Code Repository","text":"<p>Before building anything, need to create the repo. I will do this just by using the GitHub website.</p> <ul> <li>Name the Repo</li> <li>Make it public to code in the open (but also doesn't use GitHub actions minutes)</li> <li>Add a README</li> <li>Use The Unlicense</li> <li>Use \"main\" as the default branch (instead of master)</li> </ul> <p>The result creates this repository https://github.com/chiefeh/my-first-iac</p> <p></p>"},{"location":"iac/my-first-iac/#get-the-development-environment-ready","title":"Get the development environment ready","text":"<p>This document assumes the reader has git with ssh keys already setup. If not, reference the Git part of this site. Create a new directory on the local computer and clone the new repository.</p> <pre><code>PS C:\\Users\\Gregory\\Documents\\projects&gt; git clone git@github.com:chiefeh/my-first-iac.git\nCloning into 'my-first-iac'...\nEnter passphrase for key '/c/Users/Gregory/.ssh/id_rsa':\nremote: Enumerating objects: 4, done.\nremote: Counting objects: 100% (4/4), done.\nremote: Compressing objects: 100% (3/3), done.\nReceiving objects: 100% (4/4), done.\nremote: Total 4 (delta 0), reused 0 (delta 0), pack-reused 0\nPS C:\\Users\\Gregory\\Documents\\projects&gt; cd .\\my-first-iac\\\nPS C:\\Users\\Gregory\\Documents\\projects\\my-first-iac&gt; git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nnothing to commit, working tree clean\nPS C:\\Users\\Gregory\\Documents\\projects\\my-first-iac&gt; git remote -v\norigin  git@github.com:chiefeh/my-first-iac.git (fetch)\norigin  git@github.com:chiefeh/my-first-iac.git (push)\nPS C:\\Users\\Gregory\\Documents\\projects\\my-first-iac&gt;\n</code></pre> <p>Add the Project Folder to Atom Editor, expand the Git panels on the right.</p> <p></p>"},{"location":"iac/my-first-iac/#phase-1-building","title":"Phase 1 - Building","text":"<p>To build the Infrastructure, I intend to use</p> <ul> <li>GitHub Actions</li> <li>A container to run Terraform</li> <li>AWS S3 to store the Terraform state file</li> <li>Another container to host a basic website with the domain helloworld.chiefeh.digital</li> <li>Use a free TLS Certificate from Lets Encrypt</li> </ul> <p>A stretch goal to only use ARM based AMI and have the container be platform agnostic (with respect to ARM/X86). One part of this exercise is to learn containers and look at ways of running containers on AWS.</p>"},{"location":"iac/my-first-iac/#github-actions","title":"GitHub Actions","text":"<p>GitHub Actions is built into GitHub and available to all account types.</p>"},{"location":"k0s/k0s-overview/","title":"Setup of k0s","text":""}]}